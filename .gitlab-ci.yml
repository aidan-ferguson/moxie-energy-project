# CI variables
variables:
  UNITY_DIR: $CI_PROJECT_DIR/frontend/moxie-unity
  UNITY_BUILD_PATH: $CI_PROJECT_DIR/frontend/unity-module

# Backend CI pipeline
# Install all the dependancies required to build/test the backend
.backend:setup: &backend-setup
  - apt -y update
  - apt -y install python3 python3-pip
  - apt -y upgrade
  - pip3 install -r backend/requirements.txt

# 'Build' the backend (database and syntax checking)
backend:build:
  stage: build
  needs: []
  image: ubuntu:20.04
  before_script:
    - *backend-setup
  script:
    - cd backend
    - python3 manage.py makemigrations
    - python3 manage.py migrate
    - python3 manage.py check 

# Test the backend, run the django tests
backend:test:
  stage: test
  needs: ["backend:build"]
  image: ubuntu:20.04
  before_script:
    - *backend-setup
  script:
    - cd backend
    - python3 manage.py test

# Frontend Unity CI Pipeline
# Modified from https://gitlab.com/game-ci/unity3d-gitlab-ci-example
unity:build:
  stage: build
  needs: []
  image: unityci/editor:2020.3.41f1-android-1
  before_script:
    # Write unity license (from gitlab variables) to file
    - if [ -z $UNITY_LICENSE ]; then exit 1; fi
    - mkdir -p /root/.cache/unity3d
    - mkdir -p /root/.local/share/unity3d/Unity
    - echo $UNITY_LICENSE > /root/.local/share/unity3d/Unity/Unity_lic.ulf
    - cat /root/.local/share/unity3d/Unity/Unity_lic.ulf
  script:
    # Creates a headless X server which runs the unity editor and builds the project
    - xvfb-run --auto-servernum --server-args='-screen 0 640x480x24' 
      unity-editor -projectPath $UNITY_DIR -quit -batchmode -nographics -buildTarget Android
      -customBuildTarget Android -customBuildPath $UNITY_BUILD_PATH -executeMethod BuildCommand.PerformBuild -logFile /dev/stdout
    - UNITY_EXIT_CODE=$?
    - cat ~/.config/unity3d/Unity/Unity.Licensing.Client.log
    - exit $UNITY_EXIT_CODE
